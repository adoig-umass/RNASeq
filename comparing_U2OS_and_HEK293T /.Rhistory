#  pull(symbol)
volcanoFilteredHB <- symbolHB %>%
ggplot(
aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-0.6, 0.6), col = "gray", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "gray", linetype = 'dashed') +
geom_point(size = 2) +
coord_cartesian(ylim = c(0, 350), xlim = c(-10, 10)) + # since some genes can have minuslog10padj of inf, we set these limits
labs(color = 'Transcript Abundance', #legend_title,
x = expression("log"[2]*"(FC KO/WT)"),
y = expression("-log"[10]*"(adj p-value)"),
title = "UCHL5 KO Downregulated Transcripts"
) +
scale_x_continuous(breaks = seq(-10, 10, 2))+ # to customise the breaks in the x axis
#   xlim(-10,10) +
#    ylim(0, 400) +
scale_color_manual(values = c("#00AFBB", "grey", "maroon"), # to set the colours of our variable<br /><br /><br />
labels = c("Downregulated", "Not considered", "Upregulated")) # to set the labels in case we want to overwrite the categories from the dataframe (UP, DOWN, NO)
#add gene name labels
#geom_text_repel(
#  box.padding = 0.5,
#  data = symbolHB %>% filter(symbol %in% top_genes),
#  aes(label = symbol),
#  max.overlaps = Inf
#)
volcanoFilteredHB
ggsave("Novogene style downregulated transcripts.png", width = 8, height = 4, dpi = 300)
View(UCHL5_knockout.full.differential)
View(UCHL5_knockout.full.differential)
View(UCHL5_knockout.full.differential)
View(symbolHB)
View(symbolHB)
{r}
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
HEK293_UCHL5_knockout.full.differential <- read_tsv("~/hb_nf_RNASeq/Diff_Abundance/secondrunwithontology20241010/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolHB <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolHB)
#note that this data is filtered for only the statistically significant
symbolHB$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolHB$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolHB$diffexpressed[symbolHB$log2FoldChange > 0.05 & symbolHB$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolHB$diffexpressed[symbolHB$log2FoldChange < -0.05 & symbolHB$padj < 0.05] <- "DOWN"
#<p># Explore a bit
head(symbolHB[order(symbolHB$padj) & symbolHB$diffexpressed == 'DOWN', ])
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
HEK293_UCHL5_knockout.full.differential <- read_tsv("~/hb_nf_RNASeq/Diff_Abundance/secondrunwithontology20241010/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolHB <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolHB)
#note that this data is filtered for only the statistically significant
symbolHB$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolHB$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolHB$diffexpressed[symbolHB$log2FoldChange > 0.05 & symbolHB$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolHB$diffexpressed[symbolHB$log2FoldChange < -0.05 & symbolHB$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolHB, aes(x = log2fc, y = -log10(pval))) +
geom_point()
View(symbolHB)
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
HEK293_UCHL5_knockout.full.differential <- read_tsv("~/hb_nf_RNASeq/Diff_Abundance/secondrunwithontology20241010/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolHB <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolHB)
#note that this data is filtered for only the statistically significant
symbolHB$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolHB$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolHB$diffexpressed[symbolHB$log2FoldChange > 0.05 & symbolHB$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolHB$diffexpressed[symbolHB$log2FoldChange < -0.05 & symbolHB$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolHB, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
U2OS_UCHL5_knockout.full.differential <- read_tsv("~/nextflow/U2OS RNASEQ/U2OS Differential Abundance without outlier/tables/differential/UCHL5_knockout.deseq2.results.tsv")
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
U2OS_UCHL5_knockout.full.differential <- read_tsv("~/nextflow/U2OS RNASEQ/U2OS Differential Abundance without outlier/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolU2OS <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolU2OS)
#note that this data is filtered for only the statistically significant
symbolU2OS$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolU2OS$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange > 0.05 & symbolU2OS$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange < -0.05 & symbolU2OS$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
View(U2OS_UCHL5_knockout.full.differential)
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
U2OS_UCHL5_knockout.full.differential <- read_tsv("~/nextflow/U2OS RNASEQ/U2OS Differential Abundance without outlier/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolU2OS <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolU2OS)
#note that this data is filtered for only the statistically significant
symbolU2OS$symbol <- mapIds(org.Hs.eg.db, keys = symbolU2OS$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolU2OS$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange > 0.05 & symbolU2OS$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange < -0.05 & symbolU2OS$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
View(symbolU2OS)
View(symbolU2OS)
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
U2OS_UCHL5_knockout.full.differential <- read_tsv("~/nextflow/U2OS RNASEQ/U2OS Differential Abundance without outlier/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolU2OS <- U2OS_UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolU2OS)
#note that this data is filtered for only the statistically significant
symbolU2OS$symbol <- mapIds(org.Hs.eg.db, keys = symbolU2OS$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolU2OS$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange > 0.05 & symbolU2OS$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange < -0.05 & symbolU2OS$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
library(ggVennDiagram)
install.packages("ggVennDiagram")
library(ggVennDiagram)
View(symbolHB)
View(symbolHB)
sigHEK <- symbolHB %>%
if padj <= 0.05
sigHEK <- filter(symbolHB, padj < 0.05)
View(sigHEK)
View(sigHEK)
sigHEK <- select(sigHEK, gene_id)
sigU2OS <- select(sigU2OS, gene_id)
sigU2OS <- filter(symbolU2OS, padj <0.05)
sigU2OS <- select(sigU2OS, gene_id)
vennDiagramHEK293andU2OS <- list(HEK293 = sigHEK, U2OS = sigU2OS)
ggVennDiagram(vennDiagramHEK293andU2OS)
View(vennDiagramHEK293andU2OS)
vennDiagramHEK293andU2OS <- list(HEK293 = sigHEK$gene_id, U2OS$gene_id = sigU2OS)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(sigHEK, sigU2OS),
category.names = c("HEK293", "sigU2OS")
)
library(VennDiagram)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(sigHEK, sigU2OS),
category.names = c("HEK293", "sigU2OS")
)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(sigHEK, sigU2OS),
category.names = c("HEK293", "sigU2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output=TRUE
)
listsigHek <- as.list(sigHEK)
listsigU2Os <- as.list(sigU2OS)
library(ggVennDiagram)
library(VennDiagram)
sigHEK <- filter(symbolHB, padj < 0.05)
sigHEK <- select(sigHEK, gene_id)
listsigHek <- as.list(sigHEK)
sigU2OS <- filter(symbolU2OS, padj <0.05)
sigU2OS <- select(sigU2OS, gene_id)
listsigU2Os <- as.list(sigU2OS)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listsigHEK, listsigU2OS),
category.names = c("HEK293", "sigU2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output=TRUE
)
library(ggVennDiagram)
library(VennDiagram)
sigHEK <- filter(symbolHB, padj < 0.05)
sigHEK <- select(sigHEK, gene_id)
listsigHek <- as.list(sigHEK)
sigU2OS <- filter(symbolU2OS, padj <0.05)
sigU2OS <- select(sigU2OS, gene_id)
listsigU2OS <- as.list(sigU2OS)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listsigHEK, listsigU2OS),
category.names = c("HEK293", "sigU2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output=TRUE
)
library(ggVennDiagram)
library(VennDiagram)
sigHEK <- filter(symbolHB, padj < 0.05)
sigHEK <- select(sigHEK, gene_id)
listsigHEK <- as.list(sigHEK)
sigU2OS <- filter(symbolU2OS, padj <0.05)
sigU2OS <- select(sigU2OS, gene_id)
listsigU2OS <- as.list(sigU2OS)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listsigHEK, listsigU2OS),
category.names = c("HEK293", "sigU2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output=TRUE
)
View(listsigU2OS)
inner_join(sigU2OS, sigHEK, by = gene_id)
View(listsigU2Os)
View(listsigU2Os)
View(listsigU2OS)
View(listsigU2OS)
View(listsigHEK)
View(listsigHEK)
inner_join(sigU2OS, sigHEK, by = gene_id)
inner_join(listsigU2OS, listsigHEK, by = gene_id)
View(sigHEK)
View(sigU2OS)
View(sigU2OS)
inner_join(sigU2OS, listsigHEK, by = gene_id)
inner_join(sigU2OS, sigHEK, by = gene_id)
library(ggVennDiagram)
library(VennDiagram)
library(dplyr)
# Filter and select significant genes for HEK293
sigHEK <- filter(symbolHB, padj < 0.05) %>%
select(gene_id) %>%
pull(gene_id)  # Convert to vector
# Filter and select significant genes for U2OS
sigU2OS <- filter(symbolU2OS, padj < 0.05) %>%
select(gene_id) %>%
pull(gene_id)  # Convert to vector
# Prepare for the Venn diagram
listsigHEK <- list(HEK293 = sigHEK)
listsigU2OS <- list(U2OS = sigU2OS)
# Create the Venn diagram
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listsigHEK[[1]], listsigU2OS[[1]]),
category.names = c("HEK293", "U2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output = TRUE
)
vennDiagramHEK293andU2OS
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
HEK293_UCHL5_knockout.full.differential <- read_tsv("~/Documents/GitHub/RNASeq/comparing_U2OS_and_HEK293T /HEK293_UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolHB <- HEK293_UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolHB)
symbolHB$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolHB$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolHB$diffexpressed[symbolHB$log2FoldChange > 0.05 & symbolHB$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolHB$diffexpressed[symbolHB$log2FoldChange < -0.05 & symbolHB$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolHB, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
U2OS_UCHL5_knockout.full.differential <- read_tsv("~/Documents/GitHub/RNASeq/comparing_U2OS_and_HEK293T /U2OS_UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolU2OS <- U2OS_UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolU2OS)
#note that this data is filtered for only the statistically significant
symbolU2OS$symbol <- mapIds(org.Hs.eg.db, keys = symbolU2OS$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolU2OS$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange > 0.05 & symbolU2OS$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange < -0.05 & symbolU2OS$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
library(ggVennDiagram)
library(VennDiagram)
sigHEK <- filter(symbolHB, padj < 0.05)
sigHEK <- select(sigHEK, gene_id)
listsigHEK <- as.list(sigHEK)
sigU2OS <- filter(symbolU2OS, padj <0.05)
sigU2OS <- select(sigU2OS, gene_id)
listsigU2OS <- as.list(sigU2OS)
inner_join(sigU2OS, sigHEK, by = "gene_id")
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listsigHEK, listsigU2OS),
category.names = c("HEK293", "sigU2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output=TRUE
)
library(ggVennDiagram)
library(VennDiagram)
library(dplyr)
# Generate vector for use in vennDiagram package, HEK293
allHEK <- symbolHB %>%
select(gene_id) %>%
pull(gene_id)  # Convert to vector
# Generate vector for use in vennDiagram package, HEK293
allU2OS <- symbolU2OS %>%
select(gene_id) %>%
pull(gene_id)  # Convert to vector
# Prepare for the Venn diagram
listallHEK <- list(HEK293 = allHEK)
listallU2OS <- list(U2OS = allU2OS)
# Create the Venn diagram
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listallHEK[[1]], listallU2OS[[1]]),
category.names = c("HEK293", "U2OS"),
filename = 'AllHEK293andU2OSTranscriptOverlap.png',
output = TRUE
)
vennDiagramHEK293andU2OS
write.csv(symbolHB, "/media/adoig/64gbs/U2OS RNASEQ/U2OS Differential Abundance without outlier/Differential_transcripts_with_gene_symbols/symbolHEK293.csv")
write.csv(symbolHB, "symbolHEK293.csv")
write.csv(symbolU2OS, "symbolU2OS.csv")
#Generate a datatable containing all of the upregulated transcripts similiar and
#statistically significant across both HEK and U2OS
#first lets generate dataframes containing just the significant upregulated HEK293
#transcripts
SigUpregulatedHEK <- symbolHB %>% filter(diffexpressed == "UP")
write.csv(SigUpregulatedHEK, "/media/adoig/64gbs/U2OS RNASEQ/U2OS Differential Abundance without outlier/SigUpregulatedHEK.csv")
#Now lets do the same but for the significant upregulated U2OS cells
SigUpregulatedU2OS <- symbolU2OS %>%
filter(diffexpressed == "UP")
write.csv(SigUpregulatedU2OS,
"SigUpregulatedU2OS.csv")
#Generate a datatable containing all of the upregulated transcripts similiar and
#statistically significant across both HEK and U2OS
#first lets generate dataframes containing just the significant upregulated HEK293
#transcripts
SigUpregulatedHEK <- symbolHB %>% filter(diffexpressed == "UP")
write.csv(SigUpregulatedHEK, "SigUpregulatedHEK.csv")
#Now lets do the same but for the significant upregulated U2OS cells
SigUpregulatedU2OS <- symbolU2OS %>%
filter(diffexpressed == "UP")
write.csv(SigUpregulatedU2OS,
"SigUpregulatedU2OS.csv")
#Generate a datatable containing all of the upregulated transcripts similiar and
#statistically significant across both HEK and U2OS
#first lets generate dataframes containing just the significant upregulated HEK293
#transcripts
SigDownregulatedHEK <- symbolHB %>% filter(diffexpressed == "DOWN")
write.csv(SigDownregulatedHEK, "/media/adoig/64gbs/U2OS RNASEQ/U2OS Differential Abundance without outlier/SigUpregulatedHEK.csv")
#Now lets do the same but for the significant upregulated U2OS cells
SigDownregulatedU2OS <- symbolU2OS %>%
filter(diffexpressed == "DOWN")
write.csv(SigDownregulatedU2OS,
"SigUpregulatedU2OS.csv")
allsigtranscripts <- inner_join(symbolHB, symbolU2OS, by = "gene_id", suffix = c("HEK","U2OS"))
write.csv(allsigtranscripts,
"allsigtranscripts.csv")
library(tidyverse) #includes ggplot2
library(RColorBrewer) #for a colorful plot
library(ggrepel) #for nice annotations
ggplot() +
geom_point(data = symbolHB, aes(x = log2FoldChange, y = -log10(padj)), color = "red", label = symbol) +
geom_point(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj)), color = "blue")+
geom_vline(xintercept = c(-0.6, 0.6), col = "gray", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "gray", linetype = 'dashed')
library(tidyverse) # includes ggplot2
library(RColorBrewer) # for a colorful plot
library(ggrepel) # for nice annotations
ggplot() +
geom_point(data = symbolHB, aes(x = log2FoldChange, y = -log10(padj)), color = "red") +
geom_point(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj)), color = "blue") +
# Add labels for symbolHB points
geom_text_repel(data = symbolHB, aes(x = log2FoldChange, y = -log10(padj), label = symbol), color = "red", max.overlaps = 30) +
# Optionally add labels for symbolU2OS points as well
# geom_text_repel(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj), label = symbol), color = "blue") +
geom_vline(xintercept = c(-0.6, 0.6), col = "gray", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "gray", linetype = 'dashed')
similiarTranscripts <- filter(allsigtranscripts, diffexpressedHEK == diffexpressedU2OS & diffexpressedHEK != "NO")
similiarTranscripts <- filter(allsigtranscripts, diffexpressedHEK == diffexpressedU2OS & diffexpressedHEK != "NO")
write.csv(similiarTranscripts,
"similiarTranscripts.csv")
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Sample data frame (replace this with your actual data)
data <- similiarTranscripts
# Calculate correlation coefficient
correlation <- cor(data$log2FoldChangeHEK, data$log2FoldChangeU2OS, use = "complete.obs")
r_squared <- correlation^2
# Create a correlation plot
ggplot(data, aes(x = log2FoldChangeHEK, y = log2FoldChangeU2OS, label = symbolHEK)) +
geom_point(aes(color = diffexpressedHEK), size = 3) +
#geom_text(vjust = -1, size = 3) + # Optionally label points with gene symbols
geom_smooth(method = "lm", color = "blue", se = FALSE) + # Add a linear fit line
labs(title = "Correlation Plot: HEK vs U2OS",
x = "log2FoldChange (HEK)",
y = "log2FoldChange (U2OS)",
color = "Differential Expression") +
theme_minimal() +
# Add the R-squared value to the plot
annotate("text", x = min(data$log2FoldChangeHEK, na.rm = TRUE),
y = max(data$log2FoldChangeU2OS, na.rm = TRUE),
label = paste("R² =", round(r_squared, 2)),
hjust = 0, vjust = 1, size = 5, color = "black")
# Note: Make sure 'log2FoldChangeU2OS' is included in your actual data frame.
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(reshape2)  # For melting the correlation matrix
# Assuming similiarTranscripts is your data frame
# Select relevant columns and calculate correlation
cor_data <- similiarTranscripts %>%
select(log2FoldChangeHEK, log2FoldChangeU2OS)
# Calculate the correlation matrix
cor_matrix <- cor(cor_data, use = "complete.obs")
# Melt the correlation matrix for ggplot
cor_melted <- melt(cor_matrix)
# Plotting the correlation matrix
ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
limit = c(-1, 1), midpoint = 0,
name = "Correlation") +
theme_minimal() +
labs(title = "Correlation Matrix between HEK and U2OS Log2 Fold Changes",
x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
library(reshape2)
# Select relevant columns
cor_data <- similiarTranscripts %>%
select(gene_id, log2FoldChangeHEK, log2FoldChangeU2OS)
# Calculate the correlation for each gene
cor_value <- cor(cor_data$log2FoldChangeHEK, cor_data$log2FoldChangeU2OS)
# Print the overall correlation value
print(paste("Overall correlation:", cor_value))
# If you want to analyze correlations for all gene pairs:
# Create a wider format data frame for correlation
wide_data <- cor_data %>%
select(gene_id, log2FoldChangeHEK, log2FoldChangeU2OS) %>%
pivot_wider(names_from = gene_id, values_from = c(log2FoldChangeHEK, log2FoldChangeU2OS))
# Calculate pairwise correlations for all gene pairs
pairwise_cor <- cor(wide_data, use = "complete.obs")
# Melt the matrix for visualization
pairwise_cor_melted <- melt(pairwise_cor)
# Plotting the pairwise correlation matrix
ggplot(pairwise_cor_melted, aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
limit = c(-1, 1), midpoint = 0,
name = "Correlation") +
theme_minimal() +
labs(title = "Pairwise Correlation Matrix",
x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
deltaChangeinSigSamples <- mutate(similiarTranscripts, abs(log2FoldChangeHEK) - abs(log2FoldChangeU2OS))
colnames(deltaChangeinSigSamples)[16] = "Delta Log2FC"
deltaChangeinSigSamples <- mutate(similiarTranscripts, abs(log2FoldChangeHEK) - abs(log2FoldChangeU2OS))
colnames(deltaChangeinSigSamples)[16] = "Delta Log2FC"
write.csv(similarTranscriptsDeltaLFC,
"similarTranscriptsDeltaLFC.csv")
deltaChangeinSigSamples <- mutate(similiarTranscripts, abs(log2FoldChangeHEK) - abs(log2FoldChangeU2OS))
colnames(deltaChangeinSigSamples)[16] = "Delta Log2FC"
write.csv(similiarTranscripts,
"similarTranscriptsDeltaLFC.csv")
deltaChangeinSigSamples <- mutate(similiarTranscripts, abs(log2FoldChangeHEK) - abs(log2FoldChangeU2OS))
colnames(deltaChangeinSigSamples)[16] = "Delta Log2FC"
write.csv(similiarTranscripts,
"similarTranscriptsDeltaLFC.csv")
