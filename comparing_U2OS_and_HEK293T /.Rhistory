library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
library(EnhancedVolcano)
UCHL5_knockout.full.differential <- read_tsv("~/hb_nf_RNASeq/Diff_Abundance/secondrunwithontology20241010/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolHB <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolHB)
#note that this data is filtered for only the statistically significant
symbolHB$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolHB$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolHB$diffexpressed[symbolHB$log2FoldChange > 0.05 & symbolHB$padj < 0.05] <- "NO"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolHB$diffexpressed[symbolHB$log2FoldChange < -0.05 & symbolHB$padj < 0.05] <- "DOWN"
#<p># Explore a bit
head(symbolHB[order(symbolHB$padj) & symbolHB$diffexpressed == 'DOWN', ])
#use top_n to identify the top 20 genes by absolute log2FoldChange
#top_genes <- symbolHB %>%
#  top_n(20, wt = abs(log2FoldChange)) %>%
#  pull(symbol)
volcanoFilteredHB <- symbolHB %>%
ggplot(
aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-0.6, 0.6), col = "gray", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "gray", linetype = 'dashed') +
geom_point(size = 2) +
coord_cartesian(ylim = c(0, 350), xlim = c(-10, 10)) + # since some genes can have minuslog10padj of inf, we set these limits
labs(color = 'Transcript Abundance', #legend_title,
x = expression("log"[2]*"(FC KO/WT)"),
y = expression("-log"[10]*"(adj p-value)"),
title = "UCHL5 KO Downregulated Transcripts"
) +
scale_x_continuous(breaks = seq(-10, 10, 2))+ # to customise the breaks in the x axis
#   xlim(-10,10) +
#    ylim(0, 400) +
scale_color_manual(values = c("#00AFBB", "grey", "maroon"), # to set the colours of our variable<br /><br /><br />
labels = c("Downregulated", "Not considered", "Upregulated")) # to set the labels in case we want to overwrite the categories from the dataframe (UP, DOWN, NO)
#add gene name labels
#geom_text_repel(
#  box.padding = 0.5,
#  data = symbolHB %>% filter(symbol %in% top_genes),
#  aes(label = symbol),
#  max.overlaps = Inf
#)
volcanoFilteredHB
ggsave("Novogene style downregulated transcripts.png", width = 8, height = 4, dpi = 300)
View(UCHL5_knockout.full.differential)
View(UCHL5_knockout.full.differential)
View(UCHL5_knockout.full.differential)
View(symbolHB)
View(symbolHB)
{r}
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
HEK293_UCHL5_knockout.full.differential <- read_tsv("~/hb_nf_RNASeq/Diff_Abundance/secondrunwithontology20241010/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolHB <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolHB)
#note that this data is filtered for only the statistically significant
symbolHB$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolHB$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolHB$diffexpressed[symbolHB$log2FoldChange > 0.05 & symbolHB$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolHB$diffexpressed[symbolHB$log2FoldChange < -0.05 & symbolHB$padj < 0.05] <- "DOWN"
#<p># Explore a bit
head(symbolHB[order(symbolHB$padj) & symbolHB$diffexpressed == 'DOWN', ])
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
HEK293_UCHL5_knockout.full.differential <- read_tsv("~/hb_nf_RNASeq/Diff_Abundance/secondrunwithontology20241010/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolHB <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolHB)
#note that this data is filtered for only the statistically significant
symbolHB$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolHB$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolHB$diffexpressed[symbolHB$log2FoldChange > 0.05 & symbolHB$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolHB$diffexpressed[symbolHB$log2FoldChange < -0.05 & symbolHB$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolHB, aes(x = log2fc, y = -log10(pval))) +
geom_point()
View(symbolHB)
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
HEK293_UCHL5_knockout.full.differential <- read_tsv("~/hb_nf_RNASeq/Diff_Abundance/secondrunwithontology20241010/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolHB <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolHB)
#note that this data is filtered for only the statistically significant
symbolHB$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolHB$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolHB$diffexpressed[symbolHB$log2FoldChange > 0.05 & symbolHB$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolHB$diffexpressed[symbolHB$log2FoldChange < -0.05 & symbolHB$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolHB, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
U2OS_UCHL5_knockout.full.differential <- read_tsv("~/nextflow/U2OS RNASEQ/U2OS Differential Abundance without outlier/tables/differential/UCHL5_knockout.deseq2.results.tsv")
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
U2OS_UCHL5_knockout.full.differential <- read_tsv("~/nextflow/U2OS RNASEQ/U2OS Differential Abundance without outlier/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolU2OS <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolU2OS)
#note that this data is filtered for only the statistically significant
symbolU2OS$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolU2OS$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange > 0.05 & symbolU2OS$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange < -0.05 & symbolU2OS$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
View(U2OS_UCHL5_knockout.full.differential)
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
U2OS_UCHL5_knockout.full.differential <- read_tsv("~/nextflow/U2OS RNASEQ/U2OS Differential Abundance without outlier/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolU2OS <- UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolU2OS)
#note that this data is filtered for only the statistically significant
symbolU2OS$symbol <- mapIds(org.Hs.eg.db, keys = symbolU2OS$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolU2OS$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange > 0.05 & symbolU2OS$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange < -0.05 & symbolU2OS$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
View(symbolU2OS)
View(symbolU2OS)
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)
U2OS_UCHL5_knockout.full.differential <- read_tsv("~/nextflow/U2OS RNASEQ/U2OS Differential Abundance without outlier/tables/differential/UCHL5_knockout.deseq2.results.tsv")
#load data into a frame
symbolU2OS <- U2OS_UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolU2OS)
#note that this data is filtered for only the statistically significant
symbolU2OS$symbol <- mapIds(org.Hs.eg.db, keys = symbolU2OS$gene_id, keytype = "ENSEMBL", column = "SYMBOL")
# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolU2OS$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange > 0.05 & symbolU2OS$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange < -0.05 & symbolU2OS$padj < 0.05] <- "DOWN"
# Create a basic volcano plot
ggplot(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point()
library(ggVennDiagram)
install.packages("ggVennDiagram")
library(ggVennDiagram)
View(symbolHB)
View(symbolHB)
sigHEK <- symbolHB %>%
if padj <= 0.05
sigHEK <- filter(symbolHB, padj < 0.05)
View(sigHEK)
View(sigHEK)
sigHEK <- select(sigHEK, gene_id)
sigU2OS <- select(sigU2OS, gene_id)
sigU2OS <- filter(symbolU2OS, padj <0.05)
sigU2OS <- select(sigU2OS, gene_id)
vennDiagramHEK293andU2OS <- list(HEK293 = sigHEK, U2OS = sigU2OS)
ggVennDiagram(vennDiagramHEK293andU2OS)
View(vennDiagramHEK293andU2OS)
vennDiagramHEK293andU2OS <- list(HEK293 = sigHEK$gene_id, U2OS$gene_id = sigU2OS)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(sigHEK, sigU2OS),
category.names = c("HEK293", "sigU2OS")
)
library(VennDiagram)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(sigHEK, sigU2OS),
category.names = c("HEK293", "sigU2OS")
)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(sigHEK, sigU2OS),
category.names = c("HEK293", "sigU2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output=TRUE
)
listsigHek <- as.list(sigHEK)
listsigU2Os <- as.list(sigU2OS)
library(ggVennDiagram)
library(VennDiagram)
sigHEK <- filter(symbolHB, padj < 0.05)
sigHEK <- select(sigHEK, gene_id)
listsigHek <- as.list(sigHEK)
sigU2OS <- filter(symbolU2OS, padj <0.05)
sigU2OS <- select(sigU2OS, gene_id)
listsigU2Os <- as.list(sigU2OS)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listsigHEK, listsigU2OS),
category.names = c("HEK293", "sigU2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output=TRUE
)
library(ggVennDiagram)
library(VennDiagram)
sigHEK <- filter(symbolHB, padj < 0.05)
sigHEK <- select(sigHEK, gene_id)
listsigHek <- as.list(sigHEK)
sigU2OS <- filter(symbolU2OS, padj <0.05)
sigU2OS <- select(sigU2OS, gene_id)
listsigU2OS <- as.list(sigU2OS)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listsigHEK, listsigU2OS),
category.names = c("HEK293", "sigU2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output=TRUE
)
library(ggVennDiagram)
library(VennDiagram)
sigHEK <- filter(symbolHB, padj < 0.05)
sigHEK <- select(sigHEK, gene_id)
listsigHEK <- as.list(sigHEK)
sigU2OS <- filter(symbolU2OS, padj <0.05)
sigU2OS <- select(sigU2OS, gene_id)
listsigU2OS <- as.list(sigU2OS)
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listsigHEK, listsigU2OS),
category.names = c("HEK293", "sigU2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output=TRUE
)
View(listsigU2OS)
inner_join(sigU2OS, sigHEK, by = gene_id)
View(listsigU2Os)
View(listsigU2Os)
View(listsigU2OS)
View(listsigU2OS)
View(listsigHEK)
View(listsigHEK)
inner_join(sigU2OS, sigHEK, by = gene_id)
inner_join(listsigU2OS, listsigHEK, by = gene_id)
View(sigHEK)
View(sigU2OS)
View(sigU2OS)
inner_join(sigU2OS, listsigHEK, by = gene_id)
inner_join(sigU2OS, sigHEK, by = gene_id)
library(ggVennDiagram)
library(VennDiagram)
library(dplyr)
# Filter and select significant genes for HEK293
sigHEK <- filter(symbolHB, padj < 0.05) %>%
select(gene_id) %>%
pull(gene_id)  # Convert to vector
# Filter and select significant genes for U2OS
sigU2OS <- filter(symbolU2OS, padj < 0.05) %>%
select(gene_id) %>%
pull(gene_id)  # Convert to vector
# Prepare for the Venn diagram
listsigHEK <- list(HEK293 = sigHEK)
listsigU2OS <- list(U2OS = sigU2OS)
# Create the Venn diagram
vennDiagramHEK293andU2OS <- venn.diagram(
x = list(listsigHEK[[1]], listsigU2OS[[1]]),
category.names = c("HEK293", "U2OS"),
filename = 'HEK293andU2OSTranscriptOverlap.png',
output = TRUE
)
vennDiagramHEK293andU2OS
