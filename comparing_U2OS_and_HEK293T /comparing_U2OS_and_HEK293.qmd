---
title: "Comparing U2OS and HEK293 RNA Seq"
execute: 
  warning: false
  message: false
author: "Andrew Doig"
format:
  html:
    toc: true
    toc_float: true
    embed-resources: true
editor: visual
---

# Comparing RNASeq data between UCHL5 HEK293 WT vs KO and U2OS Inducuble UCHL5

## HEK293 RNAseq Data

Here we load in and prepare the HEK293 data, and generate a volcano plot as a sanity checking device.

```{r}
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)

HEK293_UCHL5_knockout.full.differential <- read_tsv("~/hb_nf_RNASeq/Diff_Abundance/secondrunwithontology20241010/tables/differential/UCHL5_knockout.deseq2.results.tsv")

#load data into a frame
symbolHB <- HEK293_UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolHB)

symbolHB$symbol <- mapIds(org.Hs.eg.db, keys = symbolHB$gene_id, keytype = "ENSEMBL", column = "SYMBOL")

# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolHB$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolHB$diffexpressed[symbolHB$log2FoldChange > 0.05 & symbolHB$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolHB$diffexpressed[symbolHB$log2FoldChange < -0.05 & symbolHB$padj < 0.05] <- "DOWN"

# Create a basic volcano plot
ggplot(data = symbolHB, aes(x = log2FoldChange, y = -log10(padj))) +
         geom_point()
```

## Now lets load in the U2OS data

Here we load in the U2OS data, and generate a volcano plot as a sanity checking device.

```{r}
library("org.Hs.eg.db")
library(tidyverse)
library(RColorBrewer)
library(ggplot2)
library(ggrepel)

U2OS_UCHL5_knockout.full.differential <- read_tsv("/media/adoig/64gbs/GChr38AtacSeq/U2OS RNASEQ/U2OS Differential Abundance without outlier/tables/differential/UCHL5_knockout.deseq2.results.tsv")

#load data into a frame
symbolU2OS <- U2OS_UCHL5_knockout.full.differential
#convert data to tibble
as_tibble(symbolU2OS)

#note that this data is filtered for only the statistically significant
symbolU2OS$symbol <- mapIds(org.Hs.eg.db, keys = symbolU2OS$gene_id, keytype = "ENSEMBL", column = "SYMBOL")

# Add a column to the data frame to specify if they are UP- or DOWN- regulated (log2fc respectively positive or negative)
symbolU2OS$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange > 0.05 & symbolU2OS$padj < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
symbolU2OS$diffexpressed[symbolU2OS$log2FoldChange < -0.05 & symbolU2OS$padj < 0.05] <- "DOWN"

# Create a basic volcano plot
ggplot(data = symbolU2OS, aes(x = log2FoldChange, y = -log10(padj))) +
         geom_point()
```

## Venn diagram showing overlap between U2OS and HEK293 statistically sig mRNA

Here is the overlap of the data for genes with a padj value of less than 0.05 for and compare the sets in a venn diagram.

```{r}
library(ggVennDiagram)
library(VennDiagram)

sigHEK <- filter(symbolHB, padj < 0.05)
  
sigHEK <- select(sigHEK, gene_id)

listsigHEK <- as.list(sigHEK)

sigU2OS <- filter(symbolU2OS, padj <0.05)

sigU2OS <- select(sigU2OS, gene_id)
  
listsigU2OS <- as.list(sigU2OS)

inner_join(sigU2OS, sigHEK, by = "gene_id")

vennDiagramHEK293andU2OS <- venn.diagram(
  x = list(listsigHEK, listsigU2OS),
  category.names = c("HEK293", "sigU2OS"),
  filename = 'HEK293andU2OSTranscriptOverlap.png',
  output=TRUE
)


```

The resulting venn diagram:

![Elephant](AllHEK293andU2OSTranscriptOverlap.png) { width=100% }

![](HEK293andU2OSTranscriptOverlap.png)

## Comparing all transcripts in the RNASeq

Lets compare all of the transcripts in the RNASeq data.

```{r}
library(ggVennDiagram)
library(VennDiagram)
library(dplyr)

# Generate vector for use in vennDiagram package, HEK293
allHEK <- symbolHB %>%
  select(gene_id) %>%
  pull(gene_id)  # Convert to vector

# Generate vector for use in vennDiagram package, HEK293
allU2OS <- symbolU2OS %>%
  select(gene_id) %>%
  pull(gene_id)  # Convert to vector

# Prepare for the Venn diagram
listallHEK <- list(HEK293 = allHEK)
listallU2OS <- list(U2OS = allU2OS)

# Create the Venn diagram
vennDiagramHEK293andU2OS <- venn.diagram(
  x = list(listallHEK[[1]], listallU2OS[[1]]),
  category.names = c("HEK293", "U2OS"),
  filename = 'AllHEK293andU2OSTranscriptOverlap.png',
  output = TRUE
)

vennDiagramHEK293andU2OS
```

```{r}
print(getwd())
```
